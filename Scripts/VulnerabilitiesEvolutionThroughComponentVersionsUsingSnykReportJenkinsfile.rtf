{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
def ANSIBLE = 'https://github.com/ansible/ansible.git'\
def CHEF = 'https://github.com/chef/chef.git'\
def PUPPET = 'https://github.com/puppetlabs/puppet.git'\
def TERRAFORM = 'https://github.com/hashicorp/terraform.git'\
def VAGRANT = 'https://github.com/hashicorp/vagrant.git'\
\
def TOOLS=['ansible','terraform','chef','puppet','vagrant']\
def VERSIONS=['v2.0.0-0.1.alpha1','v1.0','v1.0.0','v0.1.0','v18.0.0','v17.0.0','8.0.0','7.0.0','v2.0.0','v1.0.0']\
\
def SCRIPTS=['https://github.com/geerlingguy/ansible-for-devops.git','https://github.com/iwf-web/vagrant-scripts.git','https://github.com/ahzhezhe/terraform-generator.git','https://github.com/ansible-collections/community.general.git','https://github.com/tropyx/NetBeansPuppet.git']\
def SCRIPTSVERSIONS=['2.0','1.0','2.3.0','2.0.4','v4.0.0','v3.0.0','7.0.0','6.0.0','v2.0.0','v1.2']\
\
def EXTRA=['https://github.com/ricardozanini/soccer-stats.git','https://github.com/ansible/ansible-runner.git','https://github.com/hashicorp/terraform-provider-azurerm.git','https://github.com/chef/cookstyle.git','https://github.com/pulumi/pulumi-datadog.git']\
def EXTRAVERSIONS=['v0.0.2','v0.0.1','2.0.0','1.0.1','v3.0.0','v2.0.0','v7.0.0','v6.0.0','v4.0.0','v3.0.0']\
\
def textDefault\
def textV1 \
def textV2\
def vulnDefault =[]\
def vulnV1 =[]\
def vulnV2=[]\
def lineDefault =[]\
def lineV1 =[]\
def lineV2=[]\
def pathDefault=[]\
def pathV1=[]\
def pathV2=[]\
def xpath=[]\
def xcode=[]\
def xline=[]\
def xpath2=[]\
def xcode2=[]\
def xline2=[]\
def tab=[] \
def toolDefText\
def toolsCodeReport\
def toolsIaCReport\
def toolsManifestReport\
def scriptsCodeReport\
def scriptsIaCReport\
def scriptsManifestReport\
def extraCodeReport\
def extraIaCReport\
def extraManifestReport\
def intermediate=[]\
def index\
def index2\
   \
   \
\
pipeline\{\
\
   agent any\
  \
   stages\{\
\
    stage('Retrieving Snyk reports by component type and test type (code, infrastructure, dependencies)') \{\
      steps \{\
             script \{\
                 \
                 def content = new File("/Users/aicha.war/Downloads/SnykSampleComponentsTesting.txt").text\
                 \
                 intermediate = content.split("Scan of IaC scripts with Snyk code")\
                 toolsCodeReport = intermediate[0]\
                 \
                 intermediate = intermediate[1].split("Scan of IaC extra projects with Snyk code")\
                 scriptsCodeReport = intermediate[0]\
                 \
                 intermediate = intermediate[1].split("Scan of IaC tools with Snyk manifest")\
                 extraCodeReport = intermediate[0]\
                 \
                 intermediate = intermediate[1].split("Scan of IaC scripts with Snyk manifest")\
                 toolsManifestReport = intermediate[0]\
                 \
                 intermediate = intermediate[1].split("Scan of IaC extra projects with Snyk manifest")\
                 scriptsManifestReport = intermediate[0]\
                 \
                 intermediate = intermediate[1].split("Scan of IaC tools with Snyk IaC")\
                 extraManifestReport = intermediate[0]\
                 \
                 intermediate = intermediate[1].split("Scan of IaC scripts with Snyk IaC")\
                 toolsIaCReport = intermediate[0]\
                 \
                 intermediate = intermediate[1].split("Scan of IaC extra projects with Snyk IaC")\
                 scriptsIaCReport = intermediate[0]\
                 \
                 extraIaCReport = intermediate[1]\
             \}\
          \}\
          \
       \}\
       \
/*\
    stage('Retrieving tools code vulnerabilities and files') \{\
      steps \{\
             script \{\
                 \
                     def tmp\
                 for (tool in TOOLS)\{\
                        index = TOOLS.findIndexOf \{ it == tool \}\
                        if (index < 4) \{\
                            intermediate = toolsCodeReport.split("=============== $\{TOOLS[index+1]\} VERSION DEFAULT ===================")\
                            toolDefText = intermediate[0]\
                            tmp = intermediate[1]\
                        \}else\{\
                            toolDefText = tmp\
                        \}\
                        \
                        intermediate = toolDefText.split("======== $\{tool\} VERSION")\
                        if(index<4)\{\
                            textDefault = intermediate[1]\
                            textV1 = intermediate[2]\
                            textV2 = intermediate[3]\
                        \}else\{\
                            textDefault = intermediate[0]\
                            textV1 = intermediate[1]\
                            textV2 = intermediate[2]\
                        \}\
                        \
                        \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR DEFAULT VERSION\
                        def content = textDefault.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("]")) \{\
                                   tab = l.split("] ")\
                                   vulnDefault.add(tab[tab.size() - 1])\
                                \}\
                               \
                                if (l.contains("Path:")) pathDefault.add(l.minus("Path: "))\
                        \}\
                     \
                    \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 1\
                        content = textV1.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("]")) \{\
                                   tab = l.split("] ")\
                                   vulnV1.add(tab[tab.size() - 1])\
                                \}\
                               \
                                if (l.contains("Path:")) pathV1.add(l.minus("Path: "))\
                        \}\
                      \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 2\
                        content = textV2.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("]")) \{\
                                   tab = l.split("] ")\
                                   vulnV2.add(tab[tab.size() - 1])\
                                \}\
                               \
                                if (l.contains("Path:")) pathV2.add(l.minus("Path: "))\
                                \
                     \}\
                        \
                 \}\
            \}\
        \}\
    \}\
       \
\
    stage('Listing tools code vulnerabilities and locations from different versions') \{\
      steps \{\
             script \{\
                 \
                 for (tool in TOOLS)\{\
                     \
                        index = TOOLS.findIndexOf \{ it == tool \}\
                        def i = 2*index\
                        \
                        echo "=========  $\{tool\} DEFAULT ============"\
                            for (item in pathDefault)\{\
                                if(item!=null && item.contains(tool))\{\
                                    def ind = pathDefault.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnDefault[ind]\} + Path = $\{item\}"\
                                \}\
                            \}\
                        \
                        echo "=========  $\{tool\} VERSION $\{VERSIONS[i]\} ============"\
                        \
                            for (item in pathV1)\{\
                                if(item!=null && item.contains(tool))\{\
                                    def ind = pathV1.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV1[ind]\} + Path = $\{item\}"\
                                \}\
                            \}\
                        \
                        \
                        echo "=========  $\{tool\} VERSION $\{VERSIONS[i+1]\} ============"\
                        \
                        for (item in pathV2)\{\
                                if(item!=null && item.contains(tool))\{\
                                    def ind = pathV2.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV2[ind]\} + Path = $\{item\}"\
                                \}\
                            \}\
                            \
                 \}\
            \}\
        \}\
    \}*/\
    \
    stage('Retrieving tools dependency vulnerabilities and files') \{\
      steps \{\
             script \{\
                 \
                     def tmp\
                 for (tool in TOOLS)\{\
                        index = TOOLS.findIndexOf \{ it == tool \}\
                        if (index < 4) \{\
                            intermediate = toolsManifestReport.split("=============== $\{TOOLS[index+1]\} VERSION DEFAULT ===================")\
                            toolDefText = intermediate[0]\
                            tmp = intermediate[1]\
                        \}else\{\
                            toolDefText = tmp\
                        \}\
                        \
                        intermediate = toolDefText.split("======== $\{tool\} VERSION")\
                        if(index<4)\{\
                            textDefault = intermediate[1]\
                            textV1 = intermediate[2]\
                            textV2 = intermediate[3]\
                        \}else\{\
                            textDefault = intermediate[0]\
                            textV1 = intermediate[1]\
                            textV2 = intermediate[2]\
                        \}\
                        \
                        \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR DEFAULT VERSION\
                        def content = textDefault.split( '\\n' )\
                        def vuln = []\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") || l.contains("[Medium Severity]") ||l.contains("[High Severity]") ||l.contains("[Critical Severity]") ) \
                                  vuln.add(l)\
                               \
                                if (l.contains("Project path:")) \{\
                                    for (key in 0..vuln.size()-1)  pathDefault.add(l.minus("Project path:"))\
                                    vulnDefault.plus(vuln)\
                                    vuln = []\
                                    continue\
                                \}\
                        \}\
                     \
                    \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 1\
                        content = textV1.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") || l.contains("[Medium Severity]") ||l.contains("[High Severity]") ||l.contains("[Critical Severity]") ) \
                                  vuln.add(l)\
                               \
                                if (l.contains("Project path:")) \{\
                                    for (key in 0..vuln.size()-1)  pathV1.add(l.minus("Project path:"))\
                                    vulnV1.plus(vuln)\
                                    vuln = []\
                                    continue\
                                \}\
                        \}\
                      \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 2\
                        content = textV2.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") || l.contains("[Medium Severity]") ||l.contains("[High Severity]") ||l.contains("[Critical Severity]") ) \
                                  vuln.add(l)\
                               \
                                if (l.contains("Project path:")) \{\
                                    for (key in 0..vuln.size()-1)  pathV2.add(l.minus("Project path:"))\
                                    vulnV2.plus(vuln)\
                                    vuln = []\
                                    continue\
                                \}\
                                \
                     \}\
                        \
                 \}\
            \}\
        \}\
    \}\
       \
\
    stage('Listing tools dependency vulnerabilities and locations from different versions') \{\
      steps \{\
             script \{\
                 \
                 for (tool in TOOLS)\{\
                     \
                        index = TOOLS.findIndexOf \{ it == tool \}\
                        def i = 2*index\
                        \
                        echo "=========  $\{tool\} DEFAULT ============"\
                            for (item in pathDefault)\{\
                                if(item!=null && item.contains(tool))\{\
                                    def ind = pathDefault.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnDefault[ind]\} + Path = $\{item\}"\
                                \}\
                            \}\
                        \
                        echo "=========  $\{tool\} VERSION $\{VERSIONS[i]\} ============"\
                        \
                            for (item in pathV1)\{\
                                if(item!=null && item.contains(tool))\{\
                                    def ind = pathV1.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV1[ind]\} + Path = $\{item\}"\
                                \}\
                            \}\
                        \
                        \
                        echo "=========  $\{tool\} VERSION $\{VERSIONS[i+1]\} ============"\
                        \
                        for (item in pathV2)\{\
                                if(item!=null && item.contains(tool))\{\
                                    def ind = pathV2.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV2[ind]\} + Path = $\{item\}"\
                                \}\
                            \}\
                            \
                 \}\
            \}\
        \}\
    \}\
    \
    stage('Retrieving tools infrastructure vulnerabilities and files') \{\
      steps \{\
             script \{\
                 \
                     def tmp\
                 for (tool in TOOLS)\{\
                        index = TOOLS.findIndexOf \{ it == tool \}\
                        if (index < 4) \{\
                            intermediate = toolsIaCReport.split("=============== $\{TOOLS[index+1]\} VERSION DEFAULT ===================")\
                            toolDefText = intermediate[0]\
                            tmp = intermediate[1]\
                        \}else\{\
                            toolDefText = tmp\
                        \}\
                        \
                        intermediate = toolDefText.split("======== $\{tool\} VERSION")\
                        if(index<4)\{\
                            textDefault = intermediate[1]\
                            textV1 = intermediate[2]\
                            textV2 = intermediate[3]\
                        \}else\{\
                            textDefault = intermediate[0]\
                            textV1 = intermediate[1]\
                            textV2 = intermediate[2]\
                        \}\
                        \
                        \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR DEFAULT VERSION\
                        def content = textDefault.split( '\\n' )\
                        for (l in content)\{\
                               index = content.findIndexOf \{it == l\}\
                               \
                               if (l.contains("Infrastructure as code issues:") && content[index+1].contains("["))\{\
                                     vulnDefault.add(content[index+1])\
                                     for (key in index+2..content.size()-1)\{\
                                         if (content[key].contains("Target file:")) \{\
                                             pathDefault.add(l.minus("Target file: "))\
                                             break\
                                         \}\
                                     \}\
                                \}\
                        \}\
                     \
                    \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 1\
                        content = textV1.split( '\\n' )\
                        for (l in content)\{\
                               index = content.findIndexOf \{it == l\}\
                               \
                               if (l.contains("Infrastructure as code issues:") && content[index+1].contains("["))\{\
                                     vulnV1.add(content[index+1])\
                                     for (key in index+2..content.size()-1)\{\
                                         if (content[key].contains("Target file:")) \{\
                                             pathV1.add(l.minus("Target file: "))\
                                             break\
                                         \}\
                                     \}\
                                \}\
                        \}\
                      \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 2\
                        content = textV2.split( '\\n' )\
                        for (l in content)\{\
                               index = content.findIndexOf \{it == l\}\
                               \
                               if (l.contains("Infrastructure as code issues:") && content[index+1].contains("["))\{\
                                     vulnV2.add(content[index+1])\
                                     for (key in index+2..content.size()-1)\{\
                                         if (content[key].contains("Target file:")) \{\
                                             pathV2.add(l.minus("Target file: "))\
                                             break\
                                         \}\
                                     \}\
                                \}\
                     \}\
                        \
                 \}\
            \}\
        \}\
    \}\
       \
\
    stage('Listing tools infrastructure vulnerabilities and locations from different versions') \{\
      steps \{\
             script \{\
                 \
                 for (tool in TOOLS)\{\
                     \
                        index = TOOLS.findIndexOf \{ it == tool \}\
                        def i = 2*index\
                        \
                        echo "=========  $\{tool\} DEFAULT ============"\
                            for (item in pathDefault)\{\
                                if(item!=null && item.contains(tool))\{\
                                    def ind = pathDefault.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnDefault[ind]\} + Path = $\{item\}"\
                                \}\
                            \}\
                        \
                        echo "=========  $\{tool\} VERSION $\{VERSIONS[i]\} ============"\
                        \
                            for (item in pathV1)\{\
                                if(item!=null && item.contains(tool))\{\
                                    def ind = pathV1.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV1[ind]\} + Path = $\{item\}"\
                                \}\
                            \}\
                        \
                        \
                        echo "=========  $\{tool\} VERSION $\{VERSIONS[i+1]\} ============"\
                        \
                        for (item in pathV2)\{\
                                if(item!=null && item.contains(tool))\{\
                                    def ind = pathV2.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV2[ind]\} + Path = $\{item\}"\
                                \}\
                            \}\
                            \
                 \}\
            \}\
        \}\
    \}\
                        \
        /*        \
    \
    stage('Retrieving scripts code vulnerabilities and files') \{\
      steps \{\
             script \{\
                 def tmp\
                 for (script in SCRIPTS)\{\
                     \
                        index = SCRIPTS.findIndexOf \{ it == script \}\
                        def i = 2*index\
                        \
                        def scriptFolder1 = SCRIPTS[index].split('/')\
                        def scriptFolder2 = scriptFolder1[scriptFolder1.size() -1].minus('.git')\
                        \
                        if (index < 4) \{\
                            intermediate = scriptsCodeReport.split("======= $\{SCRIPTS[index+1]\} VERSION DEFAULT =======")\
                            toolDefText = intermediate[0]\
                            tmp = intermediate[1]\
                        \}else\{\
                            toolDefText = tmp\
                        \}\
                        \
                        intermediate = toolDefText.split("======== $\{script\} VERSION")\
                        if(index<4)\{\
                            textDefault = intermediate[1]\
                            textV1 = intermediate[2]\
                            textV2 = intermediate[3]\
                        \}else\{\
                            textDefault = intermediate[0]\
                            textV1 = intermediate[1]\
                            textV2 = intermediate[2]\
                        \}\
                        \
                       // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR DEFAULT VERSION\
                        def content = textDefault.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low]") || l.contains("[Medium]") || l.contains("[High]") || l.contains("[Critical]")) \{\
                                   tab = l.split("] ")\
                                   vulnDefault.add(tab[tab.size() - 1])\
                                \}\
                               \
                                if (l.contains("Path:")) pathDefault.add(l.minus("Path: ") + "scripts/$\{scriptFolder2\}/$\{index\}")\
                        \}\
                     \
                    \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 1\
                        content = textV1.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low]") || l.contains("[Medium]") || l.contains("[High]") || l.contains("[Critical]")) \{\
                                   tab = l.split("] ")\
                                   vulnV1.add(tab[tab.size() - 1])\
                                \}\
                               \
                                if (l.contains("Path:")) pathV1.add(l.minus("Path: ") + "scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i]\}")\
                        \}\
                      \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 2\
                        content = textV2.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low]") || l.contains("[Medium]") || l.contains("[High]") || l.contains("[Critical]")) \{\
                                   tab = l.split("] ")\
                                   vulnV2.add(tab[tab.size() - 1])\
                                \}\
                               \
                                if (l.contains("Path:")) pathV2.add(l.minus("Path: ") + "scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i+1]\}")\
                                \
                     \}\
                        \
                 \}\
            \}\
        \}\
    \}\
\
    stage('Listing scripts code vulnerabilities and locations from different versions') \{\
      steps \{\
             script \{\
                 \
                 for (script in SCRIPTS)\{\
                     \
                        index = SCRIPTS.findIndexOf \{ it == script \}\
                        def i = 2*index\
                        \
                        def scriptFolder1 = SCRIPTS[index].split('/')\
                        def scriptFolder2 = scriptFolder1[scriptFolder1.size() -1].minus('.git')\
                        \
                        echo "=========  $\{script\} DEFAULT ============"\
                            for (item in pathDefault)\{\
                                if(item!=null && item.contains("scripts/$\{scriptFolder2\}/$\{index\}"))\{\
                                    def ind = pathDefault.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnDefault[ind]\} + Path = $\{item.minus('scripts/$\{scriptFolder2\}/$\{index\}')\}"\
                                \}\
                            \}\
                        \
                        echo "=========  $\{script\} VERSION $\{SCRIPTSVERSIONS[i]\} ============"\
                        \
                            for (item in pathV1)\{\
                               if(item!=null && item.contains("scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i]\}"))\{\
                                    def ind = pathV1.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV1[ind]\} + Path = $\{item.minus('scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i]\}')\}"\
                               \}\
                            \}\
                        \
                        \
                        echo "=========  $\{script\} VERSION $\{SCRIPTSVERSIONS[i+1]\} ============"\
                        \
                        for (item in pathV2)\{\
                                if(item!=null && item.contains("scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i+1]\}"))\{\
                                    def ind = pathV2.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV2[ind]\} + Path = $\{item.minus('scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i+1]\}')\}"\
                                \}\
                            \}\
                            \
                 \}\
            \}\
        \}\
    \}*/\
    \
    stage('Retrieving scripts dependency vulnerabilities and files') \{\
      steps \{\
             script \{\
                 def tmp\
                 for (script in SCRIPTS)\{\
                     \
                        index = SCRIPTS.findIndexOf \{ it == script \}\
                        def i = 2*index\
                        \
                        def scriptFolder1 = SCRIPTS[index].split('/')\
                        def scriptFolder2 = scriptFolder1[scriptFolder1.size() -1].minus('.git')\
                        \
                        if (index < 4) \{\
                            intermediate = scriptsManifestReport.split("======= $\{SCRIPTS[index+1]\} VERSION DEFAULT =======")\
                            toolDefText = intermediate[0]\
                            tmp = intermediate[1]\
                        \}else\{\
                            toolDefText = tmp\
                        \}\
                        \
                        intermediate = toolDefText.split("======== $\{script\} VERSION")\
                        if(index<4)\{\
                            textDefault = intermediate[1]\
                            textV1 = intermediate[2]\
                            textV2 = intermediate[3]\
                        \}else\{\
                            textDefault = intermediate[0]\
                            textV1 = intermediate[1]\
                            textV2 = intermediate[2]\
                        \}\
                        \
                        \
                        \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR DEFAULT VERSION\
                        def content = textDefault.split( '\\n' )\
                        def vuln = []\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") || l.contains("[Medium Severity]") || l.contains("[High Severity]") || l.contains("[Critical Severity]") ) \
                                  vuln.add(l)\
                               \
                                if (l.contains("Project path:") && vuln.size()>0 ) \{\
                                    for (key in 0..vuln.size()-1)  pathDefault.add(l.minus("Project path:"))\
                                    vulnDefault.plus(vuln)\
                                    vuln = []\
                                    continue\
                                \}\
                        \}\
                     \
                    \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 1\
                        content = textV1.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") || l.contains("[Medium Severity]") || l.contains("[High Severity]") || l.contains("[Critical Severity]") ) \
                                  vuln.add(l)\
                               \
                                if (l.contains("Project path:") && vuln.size()>0) \{\
                                    for (key in 0..vuln.size()-1)  pathV1.add(l.minus("Project path:"))\
                                    vulnV1.plus(vuln)\
                                    vuln = []\
                                    continue\
                                \}\
                        \}\
                      \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 2\
                        content = textV2.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") || l.contains("[Medium Severity]") || l.contains("[High Severity]") || l.contains("[Critical Severity]") ) \
                                  vuln.add(l)\
                               \
                                if (l.contains("Project path:") && vuln.size()>0) \{\
                                    for (key in 0..vuln.size()-1)  pathV2.add(l.minus("Project path:"))\
                                    vulnV2.plus(vuln)\
                                    vuln = []\
                                    continue\
                                \}\
                                \
                     \}\
                        \
                 \}\
            \}\
        \}\
    \}\
    \
    stage('Listing scripts dependency vulnerabilities and locations from different versions') \{\
      steps \{\
             script \{\
                 \
                 for (script in SCRIPTS)\{\
                     \
                        index = SCRIPTS.findIndexOf \{ it == script \}\
                        def i = 2*index\
                        \
                        def scriptFolder1 = SCRIPTS[index].split('/')\
                        def scriptFolder2 = scriptFolder1[scriptFolder1.size() -1].minus('.git')\
                        \
                        echo "=========  $\{script\} DEFAULT ============"\
                            for (item in pathDefault)\{\
                                if(item!=null && item.contains("scripts/$\{scriptFolder2\}/$\{index\}"))\{\
                                    def ind = pathDefault.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnDefault[ind]\} + Path = $\{item.minus('scripts/$\{scriptFolder2\}/$\{index\}')\}"\
                                \}\
                            \}\
                        \
                        echo "=========  $\{script\} VERSION $\{SCRIPTSVERSIONS[i]\} ============"\
                        \
                            for (item in pathV1)\{\
                                if(item!=null && item.contains("scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i]\}"))\{\
                                    def ind = pathV1.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV1[ind]\} + Path = $\{item.minus('scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i]\}')\}"\
                                \}\
                            \}\
                        \
                        \
                        echo "=========  $\{script\} VERSION $\{SCRIPTSVERSIONS[i+1]\} ============"\
                        \
                        for (item in pathV2)\{\
                                if(item!=null && item.contains("scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i+1]\}"))\{\
                                    def ind = pathV2.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV2[ind]\} + Path = $\{item.minus('scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i+1]\}')\}"\
                                \}\
                            \}\
                            \
                 \}\
            \}\
        \}\
    \}\
    stage('Retrieving scripts infrastructure vulnerabilities and files') \{\
      steps \{\
             script \{\
                 def tmp\
                 for (script in SCRIPTS)\{\
                     \
                        index = SCRIPTS.findIndexOf \{ it == script \}\
                        def i = 2*index\
                        \
                        def scriptFolder1 = SCRIPTS[index].split('/')\
                        def scriptFolder2 = scriptFolder1[scriptFolder1.size() -1].minus('.git')\
                        \
                        if (index < 4) \{\
                            intermediate = scriptsIaCReport.split("======= $\{SCRIPTS[index+1]\} VERSION DEFAULT =======")\
                            toolDefText = intermediate[0]\
                            tmp = intermediate[1]\
                        \}else\{\
                            toolDefText = tmp\
                        \}\
                        \
                        intermediate = toolDefText.split("======== $\{script\} VERSION")\
                        if(index<4)\{\
                            textDefault = intermediate[1]\
                            textV1 = intermediate[2]\
                            textV2 = intermediate[3]\
                        \}else\{\
                            textDefault = intermediate[0]\
                            textV1 = intermediate[1]\
                            textV2 = intermediate[2]\
                        \}\
                        \
                       \
                        \
                        \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR DEFAULT VERSION\
                        def content = textDefault.split( '\\n' )\
                        def vuln = []\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") || l.contains("[Medium Severity]") ||l.contains("[High Severity]") ||l.contains("[Critical Severity]") ) \
                                  vuln.add(l)\
                               \
                                if (l.contains("Project path:")) \{\
                                    for (key in 0..vuln.size()-1)  pathDefault.add(l.minus("Project path:"))\
                                    vulnDefault.plus(vuln)\
                                    vuln = []\
                                    continue\
                                \}\
                        \}\
                     \
                    \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 1\
                        content = textV1.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") || l.contains("[Medium Severity]") ||l.contains("[High Severity]") ||l.contains("[Critical Severity]") ) \
                                  vuln.add(l)\
                               \
                                if (l.contains("Project path:")) \{\
                                    for (key in 0..vuln.size()-1)  pathV1.add(l.minus("Project path:"))\
                                    vulnV1.plus(vuln)\
                                    vuln = []\
                                    continue\
                                \}\
                        \}\
                      \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 2\
                        content = textV2.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") || l.contains("[Medium Severity]") ||l.contains("[High Severity]") ||l.contains("[Critical Severity]") ) \
                                  vuln.add(l)\
                               \
                                if (l.contains("Project path:")) \{\
                                    for (key in 0..vuln.size()-1)  pathV2.add(l.minus("Project path:"))\
                                    vulnV2.plus(vuln)\
                                    vuln = []\
                                    continue\
                                \}\
                                \
                     \}\
                        \
                 \}\
            \}\
        \}\
    \}\
\
    stage('Listing scripts infrastructure vulnerabilities and locations from different versions') \{\
      steps \{\
             script \{\
                 \
                 for (script in SCRIPTS)\{\
                     \
                        index = SCRIPTS.findIndexOf \{ it == script \}\
                        def i = 2*index\
                        \
                        def scriptFolder1 = SCRIPTS[index].split('/')\
                        def scriptFolder2 = scriptFolder1[scriptFolder1.size() -1].minus('.git')\
                        \
                        echo "=========  $\{script\} DEFAULT ============"\
                            for (item in pathDefault)\{\
                                if(item!=null && item.contains("scripts/$\{scriptFolder2\}/$\{index\}"))\{\
                                    def ind = pathDefault.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnDefault[ind]\} + Path = $\{item.minus('scripts/$\{scriptFolder2\}/$\{index\}')\}"\
                                \}\
                            \}\
                        \
                        echo "=========  $\{script\} VERSION $\{SCRIPTSVERSIONS[i]\} ============"\
                        \
                            for (item in pathV1)\{\
                                if(item!=null && item.contains("scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i]\}"))\{\
                                    def ind = pathV1.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV1[ind]\} + Path = $\{item.minus('scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i]\}')\}"\
                                \}\
                            \}\
                        \
                        \
                        echo "=========  $\{script\} VERSION $\{SCRIPTSVERSIONS[i+1]\} ============"\
                        \
                        for (item in pathV2)\{\
                                if(item!=null && item.contains("scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i+1]\}"))\{\
                                    def ind = pathV2.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV2[ind]\} + Path = $\{item.minus('scripts/$\{scriptFolder2\}/$\{SCRIPTSVERSIONS[i+1]\}')\}"\
                                \}\
                            \}\
                            \
                 \}\
            \}\
        \}\
    \}\
    /*stage('Retrieving extra projects code vulnerabilities and files') \{\
      steps \{\
             script \{\
                 def tmp\
                 for (extra in EXTRA)\{\
                     \
                        index = EXTRA.findIndexOf \{ it == extra \}\
                        def i = 2*index\
                        \
                        def extraFolder1 = EXTRA[index].split('/')\
                        def extraFolder2 = extraFolder1[extraFolder1.size() -1].minus('.git')\
                        \
                        if (index < 4) \{\
                            intermediate = extraCodeReport.split("======= $\{EXTRA[index+1]\} VERSION DEFAULT =======")\
                            toolDefText = intermediate[0]\
                            tmp = intermediate[1]\
                        \}else\{\
                            toolDefText = tmp\
                        \}\
                        \
                        intermediate = toolDefText.split("======== $\{extra\} VERSION")\
                        if(index<4)\{\
                            textDefault = intermediate[1]\
                            textV1 = intermediate[2]\
                            textV2 = intermediate[3]\
                        \}else\{\
                            textDefault = intermediate[0]\
                            textV1 = intermediate[1]\
                            textV2 = intermediate[2]\
                        \}\
                        \
                       // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR DEFAULT VERSION\
                        def content = textDefault.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("Low]") ||  l.contains("Medium]") || l.contains("High]") || l.contains("Critical]")) \{\
                                   tab = l.split("] ")\
                                   vulnDefault.add(tab[tab.size() - 1])\
                                \}\
                               \
                                if (l.contains("Path:")) pathDefault.add(l.minus("Path: ") + "extra/$\{extraFolder2\}/$\{index\}")\
                        \}\
                     \
                    \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 1\
                        content = textV1.split( '\\n' )\
                        for (l in content)\{\
                            \
                              if (l.contains("Low]") ||  l.contains("Medium]") || l.contains("High]") || l.contains("Critical]")) \{\
                                  tab = l.split("] ")\
                                   vulnV1.add(tab[tab.size() - 1])\
                                \}\
                               \
                                if (l.contains("Path:")) pathV1.add(l.minus("Path: ") + "extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i]\}")\
                        \}\
                      \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 2\
                        content = textV2.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("Low]") ||  l.contains("Medium]") || l.contains("High]") || l.contains("Critical]")) \{\
                                  tab = l.split("] ")\
                                   vulnV2.add(tab[tab.size() - 1])\
                                \}\
                               \
                                if (l.contains("Path:")) pathV2.add(l.minus("Path: ") + "extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i+1]\}")\
                                \
                     \}\
                        \
                 \}\
            \}\
        \}\
    \}\
\
    stage('Listing extra projects code vulnerabilities and locations from different versions') \{\
      steps \{\
             script \{\
                 \
                 for (extra in EXTRA)\{\
                     \
                        index = EXTRA.findIndexOf \{ it == extra \}\
                        def i = 2*index\
                        \
                        def extraFolder1 = EXTRA[index].split('/')\
                        def extraFolder2 = extraFolder1[extraFolder1.size() -1].minus('.git')\
                        \
                        echo "=========  $\{extra\} DEFAULT ============"\
                            for (item in pathDefault)\{\
                                if(item!=null && item.contains("extra/$\{extraFolder2\}/$\{index\}"))\{\
                                    def ind = pathDefault.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnDefault[ind]\} + Path = $\{item.minus('extra/$\{extraFolder2\}/$\{index\}')\}"\
                                \}\
                            \}\
                        \
                        echo "=========  $\{extra\} VERSION $\{EXTRAVERSIONS[i]\} ============"\
                        \
                            for (item in pathV1)\{\
                               if(item!=null && item.contains("extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i]\}"))\{\
                                    def ind = pathV1.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV1[ind]\} + Path = $\{item.minus('extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i]\}')\}"\
                               \}\
                            \}\
                        \
                        \
                        echo "=========  $\{extra\} VERSION $\{EXTRAVERSIONS[i+1]\} ============"\
                        \
                        for (item in pathV2)\{\
                                if(item!=null && item.contains("extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i+1]\}"))\{\
                                    def ind = pathV2.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV2[ind]\} + Path = $\{item.minus('extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i+1]\}')\}"\
                                \}\
                            \}\
                            \
                 \}\
                 pathDefault = []\
                 pathV1 = []\
                 pathV2 = []\
                 vulnDefault = []\
                 vulnV1 = []\
                 vulnV2 = []\
            \}\
        \}\
    \}\
    \
    stage('Retrieving extra projects dependency vulnerabilities and files') \{\
      steps \{\
             script \{\
                 def tmp\
                 for (extra in EXTRA)\{\
                     \
                        index = EXTRA.findIndexOf \{ it == extra \}\
                        def i = 2*index\
                        \
                        def extraFolder1 = EXTRA[index].split('/')\
                        def extraFolder2 = extraFolder1[extraFolder1.size() -1].minus('.git')\
                        \
                        if (index < 4) \{\
                            intermediate = extraManifestReport.split("======= $\{EXTRA[index+1]\} VERSION DEFAULT =======")\
                            toolDefText = intermediate[0]\
                            tmp = intermediate[1]\
                        \}else\{\
                            toolDefText = tmp\
                        \}\
                        \
                        intermediate = toolDefText.split("======== $\{extra\} VERSION")\
                        if(index<4)\{\
                            textDefault = intermediate[1]\
                            textV1 = intermediate[2]\
                            textV2 = intermediate[3]\
                        \}else\{\
                            textDefault = intermediate[0]\
                            textV1 = intermediate[1]\
                            textV2 = intermediate[2]\
                        \}\
                        \
                        \
                        def vul = []\
                       // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR DEFAULT VERSION\
                        def content = textDefault.split( '\\n' )\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") ||  l.contains("[Medium Severity]") || l.contains("[High Severity]") || l.contains("[Critical Severity]")) \{\
                                   vul.add(l)\
                                \}\
                                \
                                if (l.contains("Project Path:")) \{\
                                    for (key in 1..vul.size())\
                                          pathDefault.add(l.minus("Project Path: ") + "extra/$\{extraFolder2\}/$\{index\}")\
                                    vulnDefault.plus(vul)\
                                    vul = []\
                                    continue\
                                \}\
                        \}\
                     \
                    \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 1\
                        content = textV1.split( '\\n' )\
                        vul = []\
                        for (l in content)\{\
                            \
                               if (l.contains("[Low Severity]") ||  l.contains("[Medium Severity]") || l.contains("[High Severity]") || l.contains("[Critical Severity]")) \{\
                                   vul.add(l)\
                                \}\
                                \
                                if (l.contains("Project Path:")) \{\
                                    for (key in 1..vul.size())\
                                          pathDefault.add(l.minus("Project Path: ") + "extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i]\}")\
                                    vulnV1.plus(vul)\
                                    vul = []\
                                    continue\
                                \}\
                        \}\
                      \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 2\
                        content = textV2.split( '\\n' )\
                        vul = []\
                        for (l in content)\{\
                            if (l.contains("[Low Severity]") ||  l.contains("[Medium Severity]") || l.contains("[High Severity]") || l.contains("[Critical Severity]")) \{\
                                   vul.add(l)\
                                \}\
                                \
                                if (l.contains("Project Path:")) \{\
                                    for (key in 1..vul.size())\
                                          pathDefault.add(l.minus("Project Path: ") + "extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i+1]\}")\
                                    vulnV2.plus(vul)\
                                    vul = []\
                                    continue\
                                \}\
                                \
                     \}\
                        \
                 \}\
            \}\
        \}\
    \}\
    \
    stage('Listing extra projects dependency vulnerabilities and locations from different versions') \{\
      steps \{\
             script \{\
                 \
                 for (extra in EXTRA)\{\
                     \
                        index = EXTRA.findIndexOf \{ it == extra \}\
                        def i = 2*index\
                        \
                        def extraFolder1 = EXTRA[index].split('/')\
                        def extraFolder2 = extraFolder1[extraFolder1.size() -1].minus('.git')\
                        \
                        echo "=========  $\{extra\} DEFAULT ============"\
                            for (item in pathDefault)\{\
                                if(item!=null && item.contains("extra/$\{extraFolder2\}/$\{index\}"))\{\
                                    def ind = pathDefault.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnDefault[ind]\} + Path = $\{item.minus('extra/$\{extraFolder2\}/$\{index\}')\}"\
                                \}\
                            \}\
                        \
                        echo "=========  $\{extra\} VERSION $\{EXTRAVERSIONS[i]\} ============"\
                        \
                            for (item in pathV1)\{\
                                if(item!=null && item.contains("extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i]\}"))\{\
                                    def ind = pathV1.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV1[ind]\} + Path = $\{item.minus('extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i]\}')\}"\
                                \}\
                            \}\
                        \
                        \
                        echo "=========  $\{extra\} VERSION $\{EXTRAVERSIONS[i+1]\} ============"\
                        \
                        for (item in pathV2)\{\
                                if(item!=null && item.contains("extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i+1]\}"))\{\
                                    def ind = pathV2.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV2[ind]\} + Path = $\{item.minus('extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i+1]\}')\}"\
                                \}\
                            \}\
                            \
                 \}\
                 pathDefault = []\
                 pathV1 = []\
                 pathV2 = []\
                 vulnDefault = []\
                 vulnV1 = []\
                 vulnV2 = []\
            \}\
        \}\
    \}\
    stage('Retrieving extra projects infrastructure vulnerabilities and files') \{\
      steps \{\
             script \{\
                 def tmp\
                 for (extra in EXTRA)\{\
                     \
                        index = EXTRA.findIndexOf \{ it == extra \}\
                        def i = 2*index\
                        \
                        def extraFolder1 = EXTRA[index].split('/')\
                        def extraFolder2 = extraFolder1[extraFolder1.size() -1].minus('.git')\
                        \
                        if (index < 4) \{\
                            intermediate = extraIaCReport.split("======= $\{EXTRA[index+1]\} VERSION DEFAULT =======")\
                            toolDefText = intermediate[0]\
                            tmp = intermediate[1]\
                        \}else\{\
                            toolDefText = tmp\
                        \}\
                        \
                        intermediate = toolDefText.split("======== $\{extra\} VERSION")\
                        if(index<4)\{\
                            textDefault = intermediate[1]\
                            textV1 = intermediate[2]\
                            textV2 = intermediate[3]\
                        \}else\{\
                            textDefault = intermediate[0]\
                            textV1 = intermediate[1]\
                            textV2 = intermediate[2]\
                        \}\
                        \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR DEFAULT VERSION\
                        def content = textDefault.split( '\\n' )\
                        for (l in content)\{\
                               index = content.findIndexOf \{it == l\}\
                               \
                               if (l.contains("Low]") ||  l.contains("Medium]") || l.contains("High]") || l.contains("Critical]")) \{\
                                   tab = l.split("] ")\
                                   vulnDefault.add(tab[tab.size() - 1])\
                                \}\
                                if (l.contains("File: ")) pathDefault.add(l.minus("File: ")+ "extra/$\{extraFolder2\}/$\{index\}")\
                        \}\
                     \
                    \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 1\
                        content = textV1.split( '\\n' )\
                        for (l in content)\{\
                               index = content.findIndexOf \{it == l\}\
                               \
                               if (l.contains("Low]") ||  l.contains("Medium]") || l.contains("High]") || l.contains("Critical]")) \{\
                                  tab = l.split("] ")\
                                   vulnV1.add(tab[tab.size() - 1])\
                                \}\
                                if (l.contains("File: ")) pathV1.add(l.minus("File: ")+ "extra/$\{extraFolder2\}/$\{index\}")\
                        \}\
                      \
                       \
                        // WE ARE GETTING THE VULNERABILITIES AND THEIR LOCATIONS (FILES) FOR PRECEDENT VERSION 2\
                        content = textV2.split( '\\n' )\
                        for (l in content)\{\
                               index = content.findIndexOf \{it == l\}\
                               \
                               if (l.contains("Low]") ||  l.contains("Medium]") || l.contains("High]") || l.contains("Critical]")) \{\
                                  tab = l.split("] ")\
                                   vulnV2.add(tab[tab.size() - 1])\
                                \}\
                                if (l.contains("File: ")) pathV2.add(l.minus("File: ")+ "extra/$\{extraFolder2\}/$\{index\}")\
                     \}\
                        \
                 \}\
            \}\
        \}\
    \}\
\
    stage('Listing extra projects infrastructure vulnerabilities and locations from different versions') \{\
      steps \{\
             script \{\
                 \
                 for (extra in EXTRA)\{\
                     \
                        index = EXTRA.findIndexOf \{ it == extra \}\
                        def i = 2*index\
                        \
                        def extraFolder1 = EXTRA[index].split('/')\
                        def extraFolder2 = extraFolder1[extraFolder1.size() -1].minus('.git')\
                        \
                        echo "=========  $\{extra\} DEFAULT ============"\
                            for (item in pathDefault)\{\
                                if(item!=null && item.contains("extra/$\{extraFolder2\}/$\{index\}"))\{\
                                    def ind = pathDefault.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnDefault[ind]\} + Path = $\{item.minus('extra/$\{extraFolder2\}/$\{index\}')\}"\
                                \}\
                            \}\
                        \
                        echo "=========  $\{extra\} VERSION $\{EXTRAVERSIONS[i]\} ============"\
                        \
                            for (item in pathV1)\{\
                                if(item!=null && item.contains("extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i]\}"))\{\
                                    def ind = pathV1.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV1[ind]\} + Path = $\{item.minus('extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i]\}')\}"\
                                \}\
                            \}\
                        \
                        \
                        echo "=========  $\{extra\} VERSION $\{EXTRAVERSIONS[i+1]\} ============"\
                        \
                        for (item in pathV2)\{\
                                if(item!=null && item.contains("extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i+1]\}"))\{\
                                    def ind = pathV2.findIndexOf \{ it == item \}\
                                    echo "Vulnerability = $\{vulnV2[ind]\} + Path = $\{item.minus('extra/$\{extraFolder2\}/$\{EXTRAVERSIONS[i+1]\}')\}"\
                                \}\
                            \}\
                            \
                 \}\
            \}\
        \}\
    \}  */\
   \}\
\}   }